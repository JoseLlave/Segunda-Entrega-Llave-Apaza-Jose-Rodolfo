<h1>Productos en Tiempo Real</h1>

<div>
  <div>
    <h2>Agregar Producto</h2>
    <form id="productForm">
      <input type="text" id="title" placeholder="TÃ­tulo" required>
      <input type="text" id="description" placeholder="DescripciÃ³n" required>
      <input type="text" id="code" placeholder="CÃ³digo" required>
      <input type="number" id="price" placeholder="Precio" required>
      <input type="number" id="stock" placeholder="Stock" required>
      <input type="text" id="category" placeholder="CategorÃ­a" required>
      <button type="submit">Agregar Producto</button>
    </form>
  </div>

  <div>
    <h2>Lista de Productos</h2>
    <div id="realTimeProductsList">
      {{#if products.length}}
        {{#each products}}
          <div id="product-{{this.id}}">
            <h3>{{this.title}}</h3>
            <p>{{this.description}}</p>
            <p>Precio: ${{this.price}}</p>
            <p>Stock: {{this.stock}}</p>
            <p>CategorÃ­a: {{this.category}}</p>
            <button class="delete-btn" data-id="{{this.id}}">Eliminar</button>
          </div>
        {{/each}}
      {{else}}
        <p>No hay productos disponibles</p>
      {{/if}}
    </div>
  </div>
</div>

<script>
  console.log('PÃ¡gina cargada - verificando Socket.io...');

  function checkSocketIO() {
    if (typeof io !== 'undefined') {
      console.log('Socket.io disponible');
      initializeSocket();
    } else {
      console.log('Socket.io no cargado, reintentando en 1 segundo...');
      setTimeout(checkSocketIO, 1000);
    }
  }

  function initializeSocket() {
    const socket = io();
    console.log('Conectado al servidor WebSocket');

    document.getElementById('productForm').addEventListener('submit', (e) => {
      e.preventDefault();
      console.log('Formulario enviado');
      
      const product = {
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        code: document.getElementById('code').value,
        price: parseFloat(document.getElementById('price').value),
        stock: parseInt(document.getElementById('stock').value),
        category: document.getElementById('category').value,
        status: true
      };

      console.log('Enviando producto:', product);
      socket.emit('newProduct', product);
      e.target.reset();
    });

    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('delete-btn')) {
        const productId = parseInt(e.target.getAttribute('data-id'));
        console.log('Eliminando producto:', productId);
        socket.emit('deleteProduct', productId);
      }
    });

    socket.on('updateProducts', (products) => {
      console.log('ðŸ”„ Productos actualizados:', products);
      const productsList = document.getElementById('realTimeProductsList');
      productsList.innerHTML = '';

      if (products.length === 0) {
        productsList.innerHTML = '<p>No hay productos disponibles</p>';
        return;
      }

      products.forEach(product => {
        const productElement = document.createElement('div');
        productElement.id = `product-${product.id}`;
        productElement.innerHTML = `
          <h3>${product.title}</h3>
          <p>${product.description}</p>
          <p>Precio: $${product.price}</p>
          <p>Stock: ${product.stock}</p>
          <p>CategorÃ­a: ${product.category}</p>
          <button class="delete-btn" data-id="${product.id}">Eliminar</button>
        `;
        productsList.appendChild(productElement);
      });
    });

    socket.on('error', (error) => {
      console.error('Error del servidor:', error);
      alert('Error: ' + error);
    });
  }

  checkSocketIO();
</script>